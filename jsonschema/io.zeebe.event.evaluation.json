{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "definitions": {
        "EvaluatedDecisionValue": {
            "properties": {
                "decisionId": {
                    "description": "the id of the evaluated decision",
                    "type": "string"
                },
                "decisionKey": {
                    "description": "the key of the evaluated decision",
                    "type": "number"
                },
                "decisionName": {
                    "description": "the name of the evaluated decision",
                    "type": "string"
                },
                "decisionOutput": {
                    "description": "the output of the evaluated decision as JSON string",
                    "type": "string"
                },
                "decisionType": {
                    "description": "the type of the evaluated decision",
                    "type": "string"
                },
                "decisionVersion": {
                    "description": "the version of the evaluated decision",
                    "type": "number"
                },
                "evaluatedInputs": {
                    "description": "If the decision is a decision table then it returns the {@link EvaluatedInputValueevaluated}   * inputs}. The inputs are not available for other types of decision.",
                    "items": {
                        "$ref": "#/definitions/EvaluatedInputValue"
                    },
                    "type": "array"
                },
                "matchedRules": {
                    "description": "If the decision is a decision table then it returns the matched rules. The {@link * MatchedRuleValue matched rules} are not available for other types of decision.",
                    "items": {
                        "$ref": "#/definitions/MatchedRuleValue"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "EvaluatedInputValue": {
            "properties": {
                "inputId": {
                    "description": "the id of the evaluated input",
                    "type": "string"
                },
                "inputName": {
                    "description": "the name of the evaluated input",
                    "type": "string"
                },
                "inputValue": {
                    "description": "the value of the evaluated input expression as JSON string",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "EvaluatedOutputValue": {
            "properties": {
                "outputId": {
                    "description": "the id of the evaluated output",
                    "type": "string"
                },
                "outputName": {
                    "description": "the name of the evaluated output",
                    "type": "string"
                },
                "outputValue": {
                    "description": "the value of the evaluated output expression as JSON string",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "MatchedRuleValue": {
            "properties": {
                "evaluatedOutputs": {
                    "description": "the evaluated outputs of the rule",
                    "items": {
                        "$ref": "#/definitions/EvaluatedOutputValue"
                    },
                    "type": "array"
                },
                "ruleId": {
                    "description": "the id of the matched rule",
                    "type": "string"
                },
                "ruleIndex": {
                    "description": "The index of the matched rule in the decision table, starting with 1.",
                    "type": "number"
                }
            },
            "type": "object"
        }
    },
    "properties": {
        "bpmnProcessId": {
            "description": "the BPMN process id in which context the decision was evaluated",
            "type": "string"
        },
        "decisionId": {
            "description": "the id of the evaluated decision in the DMN",
            "type": "string"
        },
        "decisionKey": {
            "description": "the key of the evaluated decision",
            "type": "number"
        },
        "decisionName": {
            "description": "the name of the evaluated decision in the DMN",
            "type": "string"
        },
        "decisionOutput": {
            "description": "the output of the evaluated decision as JSON string",
            "type": "string"
        },
        "decisionRequirementsId": {
            "description": "the id of the DRG in the DMN the evaluated decision belongs to",
            "type": "string"
        },
        "decisionRequirementsKey": {
            "description": "the key of the deployed DRG the evaluated decision belongs to",
            "type": "number"
        },
        "decisionVersion": {
            "description": "the version of the evaluated decision",
            "type": "number"
        },
        "elementId": {
            "description": "the id of the element in the BPMN in which context the decision was evaluated",
            "type": "string"
        },
        "elementInstanceKey": {
            "description": "the key of the element instance in which context the decision was evaluated",
            "type": "number"
        },
        "evaluatedDecisionsList": {
            "description": "The {@link EvaluatedDecisionValuedetails} of the evaluated decision and its required decisions. The order depends on the evaluation order, starting from the required decisions.",
            "items": {
                "$ref": "#/definitions/EvaluatedDecisionValue"
            },
            "type": "array"
        },
        "evaluationFailureMessage": {
            "description": "If the evaluation of the decision failed then it returns the reason why the evaluation of the {@link #getFailedDecisionId() failed decision} was not successful. The failure message is not available if the decision was evaluated successfully.",
            "type": "string"
        },
        "failedDecisionId": {
            "description": "If the evaluation of the decision failed then it returns the id of the decision where the evaluation failed. It can be the called/root decision or any of its required decisions. The reason of the failure can be retrieved as {@link #getEvaluationFailureMessage() evaluation}   * failure message}. The decision id is not available if the decision was evaluated successfully.",
            "type": "string"
        },
        "processDefinitionKey": {
            "description": "the key of the process in which context the decision was evaluated",
            "type": "number"
        },
        "processInstanceKey": {
            "description": "the key of the process instance in which context the decision was evaluated",
            "type": "number"
        }
    },
    "type": "object"
}

