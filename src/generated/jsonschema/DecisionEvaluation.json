{
  "type": "object",
  "properties": {
    "decisionKey": {
      "description": "the key of the evaluated decision",
      "type": "number"
    },
    "decisionId": {
      "description": "the id of the evaluated decision in the DMN",
      "type": "string"
    },
    "decisionName": {
      "description": "the name of the evaluated decision in the DMN",
      "type": "string"
    },
    "decisionVersion": {
      "description": "the version of the evaluated decision",
      "type": "number"
    },
    "decisionRequirementsId": {
      "description": "the id of the DRG in the DMN the evaluated decision belongs to",
      "type": "string"
    },
    "decisionRequirementsKey": {
      "description": "the key of the deployed DRG the evaluated decision belongs to",
      "type": "number"
    },
    "decisionOutput": {
      "description": "the output of the evaluated decision as JSON string",
      "type": "string"
    },
    "bpmnProcessId": {
      "description": "the BPMN process id in which context the decision was evaluated",
      "type": "string"
    },
    "processDefinitionKey": {
      "description": "the key of the process in which context the decision was evaluated",
      "type": "number"
    },
    "processInstanceKey": {
      "description": "the key of the process instance in which context the decision was evaluated",
      "type": "number"
    },
    "elementId": {
      "description": "the id of the element in the BPMN in which context the decision was evaluated",
      "type": "string"
    },
    "elementInstanceKey": {
      "description": "the key of the element instance in which context the decision was evaluated",
      "type": "number"
    },
    "evaluatedDecisionsList": {
      "description": "The {@link EvaluatedDecisionValuedetails} of the evaluated decision and its required\ndecisions. The order depends on the evaluation order, starting from the required decisions.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/EvaluatedDecisionValue"
      }
    },
    "evaluationFailureMessage": {
      "description": "If the evaluation of the decision failed then it returns the reason why the evaluation of the\n{@link #getFailedDecisionId() failed decision} was not successful. The failure message is not\navailable if the decision was evaluated successfully.",
      "type": "string"
    },
    "failedDecisionId": {
      "description": "If the evaluation of the decision failed then it returns the id of the decision where the\nevaluation failed. It can be the called/root decision or any of its required decisions. The\nreason of the failure can be retrieved as {@link #getEvaluationFailureMessage() evaluation}   * failure message}. The decision id is not available if the decision was evaluated successfully.",
      "type": "string"
    }
  },
  "definitions": {
    "EvaluatedDecisionValue": {
      "type": "object",
      "properties": {
        "decisionId": {
          "description": "the id of the evaluated decision",
          "type": "string"
        },
        "decisionName": {
          "description": "the name of the evaluated decision",
          "type": "string"
        },
        "decisionKey": {
          "description": "the key of the evaluated decision",
          "type": "number"
        },
        "decisionVersion": {
          "description": "the version of the evaluated decision",
          "type": "number"
        },
        "decisionType": {
          "description": "the type of the evaluated decision",
          "type": "string"
        },
        "decisionOutput": {
          "description": "the output of the evaluated decision as JSON string",
          "type": "string"
        },
        "evaluatedInputs": {
          "description": "If the decision is a decision table then it returns the {@link EvaluatedInputValueevaluated}   * inputs}. The inputs are not available for other types of decision.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EvaluatedInputValue"
          }
        },
        "matchedRules": {
          "description": "If the decision is a decision table then it returns the matched rules. The {@link * MatchedRuleValue matched rules} are not available for other types of decision.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MatchedRuleValue"
          }
        }
      }
    },
    "EvaluatedInputValue": {
      "type": "object",
      "properties": {
        "inputId": {
          "description": "the id of the evaluated input",
          "type": "string"
        },
        "inputName": {
          "description": "the name of the evaluated input",
          "type": "string"
        },
        "inputValue": {
          "description": "the value of the evaluated input expression as JSON string",
          "type": "string"
        }
      }
    },
    "MatchedRuleValue": {
      "type": "object",
      "properties": {
        "ruleId": {
          "description": "the id of the matched rule",
          "type": "string"
        },
        "ruleIndex": {
          "description": "The index of the matched rule in the decision table, starting with 1.",
          "type": "number"
        },
        "evaluatedOutputs": {
          "description": "the evaluated outputs of the rule",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EvaluatedOutputValue"
          }
        }
      }
    },
    "EvaluatedOutputValue": {
      "type": "object",
      "properties": {
        "outputId": {
          "description": "the id of the evaluated output",
          "type": "string"
        },
        "outputName": {
          "description": "the name of the evaluated output",
          "type": "string"
        },
        "outputValue": {
          "description": "the value of the evaluated output expression as JSON string",
          "type": "string"
        }
      }
    }
  },
  "$schema": "http://json-schema.org/draft-07/schema#"
}